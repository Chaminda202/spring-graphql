scalar LocalDateTime
scalar BigDecimal

type Product {
    id: ID
    name: String
    category: String
    price: Float
    stock: Int
    rating: Rating
    discount: BigDecimal
    listedDate: LocalDateTime
}

type User {
    id: ID
    name: String!
    email: String!
    posts: [Post]
}

type Post {
    id: ID
    title: String
    content: String
    user: User
}

type Query {
    getProducts: [Product]
    findProductByCategory(category: String): [Product]
    getUsers: [User]
    findUsersByEmail(email: String): [User]
    findProduct(page: Int, size: Int): [Product]
}

type Mutation {
    updateStock(id: ID!, stock: Int): Product
    createProduct(name: String!,category: String!, price: Float, stock: Int): Product
    createUser(name: String!,email: String!): User
    createPost(userId: ID!, title: String,content: String): Post
    createPrdct(productInput: ProductInput): Product
}

input ProductInput {
    name: String
    category: String
    price: Float
    stock: Int
    rating: Rating
    discount: BigDecimal
    listedDate: LocalDateTime
}

enum Rating {
    LOW,
    MEDIUM,
    HIGH
}